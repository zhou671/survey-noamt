{"version":3,"sources":["components/Registration.js","components/Button.js","components/Rendering.js","components/cameraSync.js","components/Survey.js","components/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","onRegister","useState","userName","setUserName","id","onSubmit","e","preventDefault","length","alert","type","class","placeholder","value","onChange","target","Button","text","onClick","Rendering","object","orbitRef","model","button","render","lights","entries","push","position","intensity","camera","fov","OrbitControls","ref","attach","color","cameras","axios","require","Survey","url","nextseq","userId","fileNames","choiceurl","uniqueurl","nameid","setNameId","seqid","setSeqId","undefined","setOrbitRef","isEnd","setIsEnd","isCrush","setIsCrush","isClicked","setIsClicked","orbitRefHook","useCallback","current","addEventListener","forEach","c","p","set","x","y","z","r","rotation","zoom","updateProjectionMatrix","registerCamera","uniqueCode","setUniqueCode","names","element","idx","arr","console","log","objs","useLoader","OBJLoader","selection","num","get","then","res","jsonresp","data","children","splice","error","Loading","window","location","origin","checkuserurl","getobjfileurl","App","regPage","setRegPage","nextSeqId","setNextSeqId","setUserId","filename","setFilename","handleLogin","a","parseInt","nextId","fileName","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b712af02.chunk.js","sourcesContent":["import { useState } from \"react\"\nimport \"./styles/registration.css\"\n\nconst Registration = ({onRegister}) => {\n    const [userName, setUserName] = useState('')\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(!userName){\n            alert(\"Please input your userName\")\n            return\n        } else if(userName.length > 100){\n            alert(\"Please enter a userName less than 100 characters\")\n            return\n        }\n        onRegister(userName)\n    }    \n    \n    return (\n        <main id=\"main-holder\">\n            <h1 id=\"login-header\">Login</h1>\n\n            <p>Welcome to the perceptual similiarty on 3D shape survey!</p>\n            <p>Please enter your Amazon Machine Turk workId and click on \"Enter Survey\" to begin or continue. </p>\n\n            <form id=\"login-form\" onSubmit={onSubmit}>\n                <input type=\"text\" id=\"username-field\" class=\"login-form-field\" placeholder='UserName' value={userName} onChange={(e) => setUserName(e.target.value)}/>\n                <input type=\"submit\" value='Enter Survey' id=\"login-form-submit\"/>\n            </form>\n        </main>\n    )\n}\n\nexport default Registration\n","import PropTypes from 'prop-types'\n\nconst Button = ({text, onClick}) => {\n    return (\n            <button onClick = {onClick} id='login-form-submit'>\n                {text}\n            </button>\n    )\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    onClick: PropTypes.func.isRequired,\n}\n\nexport default Button\n","import React, {useEffect} from \"react\";\nimport Button from \"./Button\";\nimport { Canvas } from \"@react-three/fiber\"\nimport { OrbitControls } from '@react-three/drei';\nimport \"./styles/rendering.css\"\nimport * as THREE from 'three';\n\nconst Rendering = ({object, orbitRef, onClick, model, render}) => {\n    const icosaedron = [\n        [0.57735026918962576451, -1, -1.5115226281523414610],\n        [-1.1547005383792515290,   0, -1.5115226281523414610],\n        [0.57735026918962576451,  1, -1.5115226281523414610],\n        [-0.93417235896271569645, -1.6180339887498948482, -0.35682208977308993194],\n        [1.8683447179254313929,   0,                     -0.35682208977308993194],\n        [-0.93417235896271569645,  1.6180339887498948482, -0.35682208977308993194],\n        [0.93417235896271569645, -1.6180339887498948482, 0.35682208977308993194],\n        [-1.8683447179254313929,   0,                     0.35682208977308993194],\n        [0.93417235896271569645,  1.6180339887498948482, 0.35682208977308993194],\n        [-0.57735026918962576451, -1, 1.5115226281523414610],\n        [1.1547005383792515290,   0, 1.5115226281523414610],\n        [-0.57735026918962576451,  1, 1.5115226281523414610]\n    ]\n    const button = render ? <Button text={model} onClick={onClick}/> : null;\n    const lights = [];\n    for(const [_, value] of icosaedron.entries()){\n        lights.push(<pointLight position={value} intensity={0.1}/>)\n    }\n\n    //const new_object = (object.children && object.children.length > 0) ? {...object, children: object.children[0]} : object;\n    // var new_object = object\n    // console.log(object.children.length)\n    // console.log(object.children[0])\n    // console.log(object)\n    // new_object.children = [new_object.children[0]]\n    // console.log(new_object)\n\n    const check_obj = (obj) => {\n        return obj;\n    } \n\n    return (\n        <div class=\"float-child\">\n            <Canvas camera={{position:[0,0,1], fov:60}}>\n                <OrbitControls ref={orbitRef} />\n                {lights}\n                <mesh position={[0,0,0]}>\n                    <primitive object={check_obj(object)} />\n                    <meshPhongMaterial attach=\"material\" color=\"#ffffff\" />\n                </mesh>\n            </Canvas>\n            {button}\n        </div>\n    )\n}\n\nexport default Rendering\n","const cameras = [];\n\nexport const registerCamera = (camera) => {\n  if (!camera) {\n    return;\n  }\n  cameras.push(camera);\n  camera.addEventListener('change', (e) => {\n    cameras.forEach((c) => {\n      if (c !== camera) {\n        const p = e.target.object.position;\n        c.object.position.set(p.x, p.y, p.z);\n        const r = e.target.object.rotation;\n        c.object.rotation.set(r.x, r.y, r.z);\n        c.object.zoom = e.target.object.zoom;\n        c.target = e.target.target;\n        c.object.updateProjectionMatrix();\n      }\n    });\n  });\n};","import Rendering from \"./Rendering\";\nimport Button from \"./Button\";\nimport { useState, useCallback } from 'react';\nimport { useLoader } from \"@react-three/fiber\"\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport { registerCamera } from './cameraSync';\nimport './styles/survey.css'\nimport { render } from \"@testing-library/react\";\n\nconst axios = require('axios');\n\n\nconst Survey = ({url, nextseq, userId, fileNames, choiceurl, uniqueurl}) =>{\n    const [nameid, setNameId] = useState(0);\n    const [seqid, setSeqId] = useState(nextseq);\n    const [orbitRef, setOrbitRef] = useState(undefined);\n    const [isEnd, setIsEnd] = useState(false);\n    const [isCrush, setIsCrush] = useState(false);\n    const [isClicked, setIsClicked] = useState(0);\n    const orbitRefHook = useCallback((camera) => {\n        setOrbitRef({ current: camera });\n        registerCamera(camera);\n    }, []);\n    const [uniqueCode, setUniqueCode] = useState('0');\n    var names = [];\n    fileNames.forEach((element, idx, arr) => {\n        if(element === \"null\"){\n            if (idx != 0){\n                console.log(arr[idx - 1])\n            }\n            if (idx != fileNames.length - 1){\n                console.log(arr[idx + 1])\n            }\n        }\n        names.push(url+element+\"-ori.obj\")\n        names.push(url+element+\"-1.obj\")\n        names.push(url+element+\"-2.obj\")\n    });\n\n    const objs = useLoader(OBJLoader, names);\n\n    const selection = (num) => {\n        return () => {\n            if(isClicked === nameid){\n                setIsClicked(isClicked + 1)\n                axios.get(choiceurl+userId+\"/\"+seqid+\"/\"+num+\"/\"+fileNames[nameid]).then((res)=>{\n                    setSeqId(seqid + 1)\n                    setNameId(nameid + 1)\n                    if(nameid * 3 == objs.length - 3) {\n                        axios.get(uniqueurl+userId).then((res) =>{\n                            var jsonresp = res.data\n                            setUniqueCode(jsonresp.uniqueCode)\n                        })\n                        setIsEnd(true)\n                    } else {\n                        objs[3 * nameid + 0].children.splice(-1)\n                        objs[3 * nameid + 1].children.splice(-1)\n                        objs[3 * nameid + 2].children.splice(-1)\n                    }\n   \n                }, (error) => {\n                    setIsCrush(true)\n                })\n            }\n        }\n    }\n\n    const renderContent = () => {\n        if(isCrush){\n            return <p> There is some problem with the server, please refresh page or try this survey later.</p>\n        }\n        else if(isEnd){\n            return <p> You have completed all the tasks! Your unique code is {uniqueCode}. Thanks for taking this survey!</p>\n        } else {\n            return [\n                <Rendering object={objs[3 * nameid + 1]} orbitRef={orbitRefHook} onClick={selection(\"1\")} model={\"Left shape\"} render={true}/>,\n                <Rendering object={objs[3 * nameid + 0]} orbitRef={orbitRefHook} onClick={selection(\"3\")} model={\"Choose none\"} render={true}/>,\n                <Rendering object={objs[3 * nameid + 2]} orbitRef={orbitRefHook} onClick={selection(\"2\")} model={\"Right shape\"} render={true}/>\n            ]\n        }\n    }\n\n    return (\n        <main id=\"main-holder\">\n            <h1 id=\"login-header\">Survey</h1>\n            <p>Please click the left or right shape button that you think which is more similar to the middle one.</p>\n            <p>In the case of failing to load shape or it is too close to determine, please click \"Choose none\"</p>\n            <div class=\"float-container\">\n                {renderContent()}\n                {/* <Rendering object={objs[nameid * 3 + 1]} orbitRef={orbitRefHook} onClick={onClick} model={\"model1\"} render={true}/>\n                <Rendering object={objs[nameid * 3]} orbitRef={orbitRefHook} render={false}/>\n                <Rendering object={objs[nameid * 3 + 2]} orbitRef={orbitRefHook} onClick={onClick} model={\"model2\"} render={true}/> */}\n            </div>\n            \n        </main>\n    )\n}\n\nexport default Survey;\n","const Loading = () => {\n\n    return (\n        <div>\n            <h1>loading..</h1>\n        </div>\n    )\n}\n\n\n\nexport default Loading\n","import React, { Suspense, useState } from \"react\";\nimport Registration from \"./components/Registration\";\nimport Survey from \"./components/Survey\";\nimport Loading from \"./components/Loading\";\nimport \"./components/styles/body.css\"\n\nconst axios = require('axios');\nconst url = window.location.origin;\n//const url = \"http://localhost:5000\"\nconst checkuserurl = url + \"/api/checkuser/\";\nconst getobjfileurl = url + \"/api/getfile/\";\nconst choiceurl = url + \"/api/makeselection/\";\nconst uniqueurl = url + \"/api/getuniquecode/\";\n\nfunction App() {\n  const [regPage, setRegPage] = useState(true)\n  const [nextSeqId, setNextSeqId] = useState(0)\n  const [userId, setUserId] = useState('')\n  const [filename, setFilename] = useState()\n\n  const handleLogin = async(userName) => {\n    const data = await axios.get(checkuserurl+userName)\n    var jsonresp = data.data\n    setUserId(userName)\n    setNextSeqId(parseInt(jsonresp.nextId));\n    setFilename(jsonresp.fileName)\n    setRegPage(false)\n  }\n\n  return (\n    <body>\n      {\n        regPage ? \n          <Registration onRegister={handleLogin}/> : \n          <Suspense fallback={<Loading/>}> \n            <Survey url={getobjfileurl} nextseq={nextSeqId} userId={userId} fileNames={filename} choiceurl={choiceurl} uniqueurl={uniqueurl}/>\n          </Suspense>\n      }\n    </body>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}