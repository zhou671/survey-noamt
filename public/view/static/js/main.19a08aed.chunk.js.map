{"version":3,"sources":["components/Registration.js","components/Button.js","components/Rendering.js","components/cameraSync.js","components/Comments.js","components/Survey.js","components/Loading.js","components/Instruction.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","onRegister","useState","userName","setUserName","id","onSubmit","e","preventDefault","length","alert","type","class","placeholder","value","onChange","target","Button","text","onClick","Rendering","object","orbitRef","model","button","render","lights","entries","push","position","intensity","camera","fov","OrbitControls","ref","attach","color","cameras","Comment","onComment","axios","require","Survey","url","nextseq","userId","fileNames","choiceurl","uniqueCode","commenturl","nameid","setNameId","seqid","setSeqId","undefined","setOrbitRef","isEnd","setIsEnd","isComment","setIsComment","orbitRefHook","useCallback","current","addEventListener","forEach","c","p","set","x","y","z","r","rotation","zoom","updateProjectionMatrix","registerCamera","names","element","idx","arr","console","log","objs","useLoader","OBJLoader","selection","num","get","children","splice","comment","Loading","src","alt","width","height","Instruction","window","location","origin","checkuserurl","getobjfileurl","App","setRegPage","nextSeqId","setNextSeqId","setUserId","filename","setFilename","pageState","setPageState","setUniqueCode","handleLogin","a","data","jsonresp","parseInt","nextId","fileName","canvas","document","createElement","WebGLRenderingContext","getContext","webgl_support","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.19a08aed.chunk.js","sourcesContent":["import { useState } from \"react\"\nimport \"./styles/registration.css\"\n\nconst Registration = ({onRegister}) => {\n    const [userName, setUserName] = useState('')\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(!userName){\n            alert(\"Please input your userName\")\n            return\n        } else if(userName.length > 100){\n            alert(\"Please enter a userName less than 100 characters\")\n            return\n        }\n        onRegister(userName)\n    }    \n    \n    return (\n        <main id=\"main-holder\">\n            <h1 id=\"login-header\">Login</h1>\n\n            <p>Welcome to the perceptual similiarty on 3D shape survey!</p>\n            <p>Please enter your Amazon Mechanical Turk workId and click on \"Enter Survey\" to begin or continue. </p>\n\n            <form id=\"login-form\" onSubmit={onSubmit}>\n                <input type=\"text\" id=\"username-field\" class=\"login-form-field\" placeholder='UserName' value={userName} onChange={(e) => setUserName(e.target.value)}/>\n                <input type=\"submit\" value='Continue' id=\"login-form-submit\"/>\n            </form>\n        </main>\n    )\n}\n\nexport default Registration\n","import PropTypes from 'prop-types'\n\nconst Button = ({text, onClick}) => {\n    return (\n            <button onClick = {onClick} id='login-form-submit'>\n                {text}\n            </button>\n    )\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    onClick: PropTypes.func.isRequired,\n}\n\nexport default Button\n","import React, {useEffect} from \"react\";\nimport Button from \"./Button\";\nimport { Canvas } from \"@react-three/fiber\"\nimport { OrbitControls } from '@react-three/drei';\nimport \"./styles/rendering.css\"\nimport * as THREE from 'three';\n\n// const Rendering = ({object, orbitRef, onClick, model, render}) => {\n//     const icosaedron = [\n//         [0.57735026918962576451, -1, -1.5115226281523414610],\n//         [-1.1547005383792515290,   0, -1.5115226281523414610],\n//         [0.57735026918962576451,  1, -1.5115226281523414610],\n//         [-0.93417235896271569645, -1.6180339887498948482, -0.35682208977308993194],\n//         [1.8683447179254313929,   0,                     -0.35682208977308993194],\n//         [-0.93417235896271569645,  1.6180339887498948482, -0.35682208977308993194],\n//         [0.93417235896271569645, -1.6180339887498948482, 0.35682208977308993194],\n//         [-1.8683447179254313929,   0,                     0.35682208977308993194],\n//         [0.93417235896271569645,  1.6180339887498948482, 0.35682208977308993194],\n//         [-0.57735026918962576451, -1, 1.5115226281523414610],\n//         [1.1547005383792515290,   0, 1.5115226281523414610],\n//         [-0.57735026918962576451,  1, 1.5115226281523414610]\n//     ]\n//     const button = render ? <Button text={model} onClick={onClick}/> : null;\n//     const lights = [];\n//     for(const [_, value] of icosaedron.entries()){\n//         lights.push(<pointLight position={value} intensity={0.1}/>)\n//     }\n\n//     //const new_object = (object.children && object.children.length > 0) ? {...object, children: object.children[0]} : object;\n//     // var new_object = object\n//     // console.log(object.children.length)\n//     // console.log(object.children[0])\n//     // console.log(object)\n//     // new_object.children = [new_object.children[0]]\n//     // console.log(new_object)\n\n//     const check_obj = (obj) => {\n//         return obj;\n//     } \n\n//     return (\n//         <div class=\"float-child\">\n//             <Canvas camera={{position:[0,0,0], fov:60}}>\n//                 <OrbitControls ref={orbitRef} />\n//                 {lights}\n//                 <mesh position={[0,0,0]}>\n//                     <primitive object={check_obj(object)} />\n//                     <meshPhongMaterial attach=\"material\" color=\"#ffffff\" />\n//                 </mesh>\n//             </Canvas>\n//             {button}\n//         </div>\n//     )\n// }\n\nconst Rendering = ({object, orbitRef, onClick, model, render}) => {\n    const icosaedron = [\n        [0.57735026918962576451, -1, -1.5115226281523414610],\n        [-1.1547005383792515290,   0, -1.5115226281523414610],\n        [0.57735026918962576451,  1, -1.5115226281523414610],\n        [-0.93417235896271569645, -1.6180339887498948482, -0.35682208977308993194],\n        [1.8683447179254313929,   0,                     -0.35682208977308993194],\n        [-0.93417235896271569645,  1.6180339887498948482, -0.35682208977308993194],\n        [0.93417235896271569645, -1.6180339887498948482, 0.35682208977308993194],\n        [-1.8683447179254313929,   0,                     0.35682208977308993194],\n        [0.93417235896271569645,  1.6180339887498948482, 0.35682208977308993194],\n        [-0.57735026918962576451, -1, 1.5115226281523414610],\n        [1.1547005383792515290,   0, 1.5115226281523414610],\n        [-0.57735026918962576451,  1, 1.5115226281523414610]\n    ]\n    const button = render ? <Button text={model} onClick={onClick}/> : null;\n    const lights = [];\n    for(const [_, value] of icosaedron.entries()){\n        lights.push(<pointLight position={value} intensity={0.1}/>)\n    }\n\n    return (\n        <div class=\"float-child\">\n            <Canvas camera={{position:[0,0,1], fov:60}}>\n                <OrbitControls ref={orbitRef} />\n                {lights}\n                {/* <pointLight position={[10, 10, 10]} intensity={1} /> */}\n                <mesh position={[0,0,0]}>\n                    <primitive object={object} />\n                    <meshPhongMaterial attach=\"material\" color=\"#ffffff\" />\n                </mesh>\n            </Canvas>\n            {button}\n        </div>\n    )\n}\n\n\nexport default Rendering\n","const cameras = [];\n\nexport const registerCamera = (camera) => {\n  if (!camera) {\n    return;\n  }\n  cameras.push(camera);\n  camera.addEventListener('change', (e) => {\n    cameras.forEach((c) => {\n      if (c !== camera) {\n        const p = e.target.object.position;\n        c.object.position.set(p.x, p.y, p.z);\n        const r = e.target.object.rotation;\n        c.object.rotation.set(r.x, r.y, r.z);\n        c.object.zoom = e.target.object.zoom;\n        c.target = e.target.target;\n        c.object.updateProjectionMatrix();\n      }\n    });\n  });  \n};\n\nexport const translate = (dt) =>{\n  if (cameras.length == 0){\n    return\n  }\n}","import { useState } from \"react\"\nimport \"./styles/comment.css\"\n\nconst Comment = ({onComment}) => {\n    const [userName, setUserName] = useState('')\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(userName.length > 65536){\n            alert(\"Please enter a comment less than 255 characters\")\n            return\n        }\n        onComment(userName)\n    }    \n    \n    return (\n        <main id=\"main-holder\">\n            <p>If you have any comments for the survey, please leave a comment.</p>\n\n            <form id=\"comment-form\" onSubmit={onSubmit}>\n                <textarea id=\"username-field\" class=\"comment-form-field\" value={userName} onChange={(e) => setUserName(e.target.value)}/>\n                <input type=\"submit\" value='Continue' id=\"comment-form-submit\"/>\n            </form>\n        </main>\n    )\n}\n\nexport default Comment\n","import Rendering from \"./Rendering\";\nimport Button from \"./Button\";\nimport { useState, useCallback } from 'react';\nimport { useLoader } from \"@react-three/fiber\"\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport { registerCamera } from './cameraSync';\nimport Comment from './Comments'\nimport './styles/survey.css'\nimport { render } from \"@testing-library/react\";\n\nconst axios = require('axios');\n\n\n// const Survey = ({url, nextseq, userId, fileNames, choiceurl, uniqueurl}) =>{\n    // const [nameid, setNameId] = useState(0);\n    // const [seqid, setSeqId] = useState(nextseq);\n    // const [orbitRef, setOrbitRef] = useState(undefined);\n    // const [isEnd, setIsEnd] = useState(false);\n    // const orbitRefHook = useCallback((camera) => {\n    //     setOrbitRef({ current: camera });\n    //     registerCamera(camera);\n    // }, []);\n    // const [uniqueCode, setUniqueCode] = useState('0');\n    // var names = [];\n    // fileNames.forEach((element, idx, arr) => {\n    //     if(element === \"null\"){\n    //         if (idx != 0){\n    //             console.log(arr[idx - 1])\n    //         }\n    //         if (idx != fileNames.length - 1){\n    //             console.log(arr[idx + 1])\n    //         }\n    //     }\n    //     names.push(url+element+\"-ori.obj\")\n    //     names.push(url+element+\"-1.obj\")\n    //     names.push(url+element+\"-2.obj\")\n    // });\n\n    // const objs = useLoader(OBJLoader, names);\n\n    // const selection = (num) => {\n    //     return () => {\n    //         axios.get(choiceurl+userId+\"/\"+seqid+\"/\"+num+\"/\"+fileNames[nameid])\n    //         setSeqId(seqid + 1)\n    //         setNameId(nameid + 1)\n    //         console.log(nameid)\n    //         console.log(objs.length)\n    //         if(nameid * 3 == objs.length - 3) {\n    //             axios.get(uniqueurl+userId).then((res) =>{\n    //                 var jsonresp = res.data\n    //                 console.log(jsonresp.uniqueCode)\n    //                 setUniqueCode(jsonresp.uniqueCode)\n    //                 setIsEnd(true)\n    //             })\n    //         } else {\n    //             objs[3 * nameid + 0].children.splice(-1)\n    //             objs[3 * nameid + 1].children.splice(-1)\n    //             objs[3 * nameid + 2].children.splice(-1)\n    //         }\n    //     }\n    // }\n\n    // const renderContent = () => {\n    //     return [\n    //         <Rendering object={objs[3 * nameid + 1]} orbitRef={orbitRefHook} onClick={selection(\"1\")} model={\"Left shape\"} render={true}/>,\n    //         <Rendering object={objs[3 * nameid + 0]} orbitRef={orbitRefHook} onClick={selection(\"3\")} model={\"Choose none\"} render={false}/>,\n    //         <Rendering object={objs[3 * nameid + 2]} orbitRef={orbitRefHook} onClick={selection(\"2\")} model={\"Right shape\"} render={true}/>\n    //     ]\n    // }\n\n    // if(isEnd){\n    //     return <p> You have completed all the tasks! Your unique code is {uniqueCode}. Thanks for taking this survey! However, please refresh the page to check if you have completed the survey. </p>        \n    // }\n\n//     return (\n//         <main id=\"main-holder\">\n//             <h1 id=\"login-header\">Task {nameid} / {fileNames.length}</h1>\n//             <p>Does the left or right look more similar to the middle one?</p>\n//             <p>Note that you can move the shapes around by left/right clicking and drag, or scrolling up and down on the shapes.</p>\n//             <div class=\"float-container\">\n//                 {renderContent()}\n//                 {/* <Rendering object={objs[nameid * 3 + 1]} orbitRef={orbitRefHook} onClick={onClick} model={\"model1\"} render={true}/>\n//                 <Rendering object={objs[nameid * 3]} orbitRef={orbitRefHook} render={false}/>\n//                 <Rendering object={objs[nameid * 3 + 2]} orbitRef={orbitRefHook} onClick={onClick} model={\"model2\"} render={true}/> */}\n//             </div>\n//             <p>Failed to load 3d shapes? Click <Button text={\"Report a bug\"} onClick={selection(\"3\")}/></p>\n//         </main>\n//     )\n// }\n\nconst Survey = ({url, nextseq, userId, fileNames, choiceurl, uniqueCode, commenturl}) =>{\n    const [nameid, setNameId] = useState(0);\n    const [seqid, setSeqId] = useState(nextseq);\n    const [orbitRef, setOrbitRef] = useState(undefined);\n    const [isEnd, setIsEnd] = useState(false);\n    const [isComment, setIsComment] = useState(false);\n    const orbitRefHook = useCallback((camera) => {\n        setOrbitRef({ current: camera });\n        registerCamera(camera);\n    }, []);\n    var names = [];\n    fileNames.forEach((element, idx, arr) => {\n        if(element === \"null\"){\n            if (idx != 0){\n                console.log(arr[idx - 1])\n            }\n            if (idx != fileNames.length - 1){\n                console.log(arr[idx + 1])\n            }\n        }\n        names.push(url+element+\"-ori.obj\")\n        names.push(url+element+\"-1.obj\")\n        names.push(url+element+\"-2.obj\")\n    });\n\n    const objs = useLoader(OBJLoader, names);\n\n    const selection = (num) => {\n        return () => {\n            if(nameid * 3 < objs.length - 3){\n                axios.get(choiceurl+userId+\"/\"+seqid+\"/\"+num+\"/\"+fileNames[nameid])\n            }\n            setSeqId(seqid + 1)\n            setNameId(nameid + 1)\n            console.log(nameid)\n            console.log(objs.length)\n            if(nameid * 3 >= objs.length - 3) {\n                //setIsEnd(true)\n                setIsComment(true)\n            } else {\n                objs[3 * nameid + 0].children.splice(-1)\n                objs[3 * nameid + 1].children.splice(-1)\n                objs[3 * nameid + 2].children.splice(-1)\n            }\n        }\n    }\n\n    const onComment = (comment) =>{\n        if(comment.length > 0){\n            axios.get(commenturl+'/'+comment)\n        }\n        setIsEnd(true)\n        setIsComment(false)\n    }\n\n    const renderContent = () => {\n        return [\n            <Rendering object={objs[3 * nameid + 1]} orbitRef={orbitRefHook} onClick={selection(\"1\")} model={\"Left shape\"} render={true}/>,\n            <Rendering object={objs[3 * nameid + 0]} orbitRef={orbitRefHook} onClick={selection(\"3\")} model={\"Choose none\"} render={false}/>,\n            <Rendering object={objs[3 * nameid + 2]} orbitRef={orbitRefHook} onClick={selection(\"2\")} model={\"Right shape\"} render={true}/>\n        ]\n    }\n\n    if(isComment){\n        return (\n            <Comment onComment={onComment}></Comment>\n        )\n    }\n\n    if(isEnd){\n        return <p> You have completed all the tasks! Your unique code is {uniqueCode}. Thanks for taking this survey! </p>        \n    }\n\n    return (\n        <main id=\"main-holder\">\n            <h1 id=\"login-header\">Task {seqid} / 55 </h1>\n            <h2>Does the left or right shape look more similar to the middle one?</h2>\n            <p>*Please drag/zoom the shapes to compare details.</p>\n            <div class=\"float-container\">\n                {renderContent()}\n            </div>\n            <p>Failed to load 3d shapes? <button onClick={selection(\"3\")} id=\"text-button\"> Click here. </button></p>\n        </main>\n    )\n}\n\nexport default Survey;\n","const Loading = () => {\n\n    return (\n        <div>\n            <h1>Downloading all 3D shapes which spends about 2 minutes. Here is a timer for 2 minutes.</h1>\n            <img src='/out.gif' alt=\"loadingbar\" width=\"400\" height=\"100\"/>\n        </div>\n    )\n}\n\n\n\nexport default Loading\n","import \"./styles/registration.css\"\nimport Button from \"./Button\";\nimport \"./styles/button.css\"\n\nconst Instruction = ({onClick}) => {\n\n    return (\n        <main id=\"main-holder\">\n          <h1 id=\"login-header\">Instruction</h1>\n          <p> *Please watch the gif below carefully to get familiar with how to interact with 3D shapes.</p>\n          <img src='/instruction2.gif' alt=\"instruction\" width=\"900\" height=\"500\"/>\n          <img src='/out.gif' alt=\"loadingbar\" width=\"4\" height=\"1\"/>\n          <button onClick = {onClick} id='btn'>\n                Start Survey\n            </button>\n        </main>\n    )\n}\n\nexport default Instruction\n","import React, { Suspense, useState } from \"react\";\nimport Registration from \"./components/Registration\";\nimport Survey from \"./components/Survey\";\nimport Loading from \"./components/Loading\";\nimport Instrucion from \"./components/Instruction\";\nimport \"./components/styles/body.css\"\n\nconst axios = require('axios');\nconst url = window.location.origin;\n//const url = \"http://localhost:80\"\nconst checkuserurl = url + \"/api/checkuser/\";\nconst getobjfileurl = url + \"/api/getfile/\";\nconst choiceurl = url + \"/api/makeselection/\";\nconst uniqueurl = url + \"/api/getuniquecode/\";\nconst commenturl = url + \"/api/getcommet/\"\n\nfunction App() {\n  const [regPage, setRegPage] = useState(true)\n  const [nextSeqId, setNextSeqId] = useState(0)\n  const [userId, setUserId] = useState('')\n  const [filename, setFilename] = useState()\n  const [pageState, setPageState] = useState(0)\n  const [uniqueCode, setUniqueCode] = useState('')\n\n  const handleLogin = async(userName) => {\n    const data = await axios.get(checkuserurl+userName)\n    var jsonresp = data.data\n    setUserId(userName)\n    setNextSeqId(parseInt(jsonresp.nextId));\n    setFilename(jsonresp.fileName)\n    setUniqueCode(jsonresp.uniqueCode)\n    setPageState(1)\n    setRegPage(false)\n  }\n  const onClick = () =>{\n    setPageState(2)\n  }\n\n  function webgl_support () { \n    try {\n     var canvas = document.createElement('canvas'); \n     return !!window.WebGLRenderingContext &&\n       (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'));\n    } catch(e) {\n      return false;\n    }\n  };\n\n  var webgltest = webgl_support();\n  if (!webgltest){\n    return <body>\n      This survey needs support of webgl, please either switch a brower or enable webgl.\n    </body>\n  }\n\n  if(pageState === 0){\n    return(\n      <body>\n        <Registration onRegister={handleLogin}/>\n      </body>\n    );\n  }\n  \n  if(pageState === 1){\n    if(nextSeqId >= 55){\n      return <p> You have completed all the tasks! Your unique code is {uniqueCode}. Thanks for taking this survey! </p>;\n    }\n    return(\n      <body>\n        <Instrucion onClick={onClick}/>\n      </body>\n    );\n  }\n  \n  return (\n    <body>\n      <Suspense fallback={<Loading/>}> \n        <Survey url={getobjfileurl} nextseq={nextSeqId} userId={userId} fileNames={filename} choiceurl={choiceurl} uniqueCode={uniqueCode} commenturl={commenturl}/>\n      </Suspense>\n    </body>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}